import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

# 1. Load Dataset (SMS Spam Collection Dataset)
# Download from: https://archive.ics.uci.edu/ml/datasets/sms+spam+collection
# File format: "label \t message"
data = pd.read_csv("SMSSpamCollection", sep='\t', names=["label", "message"])

# 2. Encode labels: spam=1, ham=0
data['label'] = data['label'].map({'ham': 0, 'spam': 1})

# 3. Split dataset
X_train, X_test, y_train, y_test = train_test_split(
    data['message'], data['label'], test_size=0.2, random_state=42
)

# 4. Convert text to numeric vectors (Bag of Words)
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# 5. Train Naive Bayes Classifier
model = MultinomialNB()
model.fit(X_train_vec, y_train)

# 6. Predictions
y_pred = model.predict(X_test_vec)

# 7. Evaluation
print("âœ… Accuracy:", accuracy_score(y_test, y_pred))
print("\nðŸ“Š Classification Report:\n", classification_report(y_test, y_pred))

# 8. Test with custom input
def predict_message(msg):
    vec = vectorizer.transform([msg])
    pred = model.predict(vec)[0]
    return "Spam ðŸš¨" if pred == 1 else "Ham âœ…"

# Try custom messages
print("\nðŸ”Ž Example Predictions:")
print("Message: 'Congratulations! You won a free lottery ticket' â†’", predict_message("Congratulations! You won a free lottery ticket"))
print("Message: 'Hi, are we still meeting today?' â†’", predict_message("Hi, are we still meeting today?"))
